!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/olivier/Documents/shmake/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210110.0/
FILEREADERH	fileReader.hpp	/^#define FILEREADERH$/;"	d
PATH_MAX	main.cpp	/^#define PATH_MAX /;"	d	file:
Shm	CMakeLists.txt	/^add_executable(Shm main.cpp fileReader.cpp)/;"	t
Shm	CMakeLists.txt	/^project(Shm)$/;"	p
buffer	fileReader.hpp	/^    string buffer;$/;"	m	class:fileReader	typeref:typename:string
contents	fileReader.hpp	/^    vector<string> contents;$/;"	m	class:fileReader	typeref:typename:vector<string>
execute	fileReader.cpp	/^void fileReader::execute(string target)$/;"	f	class:fileReader	typeref:typename:void
fileReader	fileReader.cpp	/^fileReader::fileReader(string fileName)$/;"	f	class:fileReader
fileReader	fileReader.hpp	/^class fileReader$/;"	c
fileStream	fileReader.hpp	/^    ifstream fileStream;$/;"	m	class:fileReader	typeref:typename:ifstream
findTarget	fileReader.cpp	/^int fileReader::findTarget(string target)$/;"	f	class:fileReader	typeref:typename:int
main	main.cpp	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
readFile	fileReader.cpp	/^void fileReader::readFile()$/;"	f	class:fileReader	typeref:typename:void
